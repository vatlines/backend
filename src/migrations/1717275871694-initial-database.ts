import { MigrationInterface, QueryRunner } from 'typeorm';

export class InitialDatabase1717275871694 implements MigrationInterface {
  name = 'InitialDatabase1717275871694';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TABLE "editors" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "cid" integer NOT NULL, "added_by" integer NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "facilityFacilityId" character varying(4), CONSTRAINT "PK_98bd9cd67ad6c3e6d95a83a8a27" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(`CREATE INDEX "cid-idx" ON "editors" ("cid") `);
    await queryRunner.query(
      `CREATE UNIQUE INDEX "facility_editor-idx" ON "editors" ("cid", "facilityFacilityId") `,
    );
    await queryRunner.query(
      `CREATE TABLE "facility" ("id" character varying(4) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "nsleft" integer NOT NULL DEFAULT '1', "nsright" integer NOT NULL DEFAULT '2', "parentFacilityFacilityId" character varying(4), CONSTRAINT "PK_07c6c82781d105a680b5c265be6" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TYPE "public"."position_paneltype_enum" AS ENUM('RDVS', 'VSCS')`,
    );
    await queryRunner.query(
      `CREATE TABLE "position" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" character varying NOT NULL, "sector" character varying NOT NULL, "dial_code" character varying, "panelType" "public"."position_paneltype_enum" NOT NULL, "callsign" character varying NOT NULL, "frequency" integer NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "facilityFacilityId" character varying(4), CONSTRAINT "PK_b7f483581562b4dc62ae1a5b7e2" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_3ec9fb6cccc02b128261aea5ee" ON "position" ("frequency") `,
    );
    await queryRunner.query(
      `CREATE UNIQUE INDEX "position-name_facility-idx" ON "position" ("name", "facilityFacilityId") `,
    );
    await queryRunner.query(
      `CREATE TABLE "position_configuration" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_5e4b67acedff07534ac1b690f0b" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "configuration-layout" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "order" integer NOT NULL, "configurationId" integer, "buttonId" integer, CONSTRAINT "PK_c1fba6415ecf2154b35864f435f" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE UNIQUE INDEX "order_configuration-idx" ON "configuration-layout" ("order", "configurationId") `,
    );
    await queryRunner.query(
      `CREATE TYPE "public"."button_type_enum" AS ENUM('SHOUT', 'OVERRIDE', 'RING', 'NONE', 'CONVERTED_SHOUT')`,
    );
    await queryRunner.query(
      `CREATE TABLE "button" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "short_name" character varying(4) NOT NULL, "long_name" character varying(6), "target" character varying NOT NULL, "type" "public"."button_type_enum" NOT NULL, "dial_code" integer, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "facilityFacilityId" character varying(4), CONSTRAINT "PK_a4df4e4f7a5882bc94442d3f209" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "position_configurations_positions" ("positionConfigurationId" integer NOT NULL, "positionId" integer NOT NULL, CONSTRAINT "PK_40edc21248cdae8cee1784c502d" PRIMARY KEY ("positionConfigurationId", "positionId"))`,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_20e9832d5eb9ee2f31c35496bc" ON "position_configurations_positions" ("positionConfigurationId") `,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_34c3d74875229333877e600cd0" ON "position_configurations_positions" ("positionId") `,
    );
    await queryRunner.query(
      `ALTER TABLE "editors" ADD CONSTRAINT "FK_3a9e132570f2ff4282f1e7f12f0" FOREIGN KEY ("facilityFacilityId") REFERENCES "facility"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "facility" ADD CONSTRAINT "FK_77a27f412476a918b5c83083187" FOREIGN KEY ("parentFacilityFacilityId") REFERENCES "facility"("id") ON DELETE CASCADE ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "position" ADD CONSTRAINT "FK_237d67b997aed694f242f0522da" FOREIGN KEY ("facilityFacilityId") REFERENCES "facility"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "configuration-layout" ADD CONSTRAINT "FK_ac2cf043fdb7a824902fbbe8ecf" FOREIGN KEY ("configurationId") REFERENCES "position_configuration"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "configuration-layout" ADD CONSTRAINT "FK_faee05098d1905d2069cfe79556" FOREIGN KEY ("buttonId") REFERENCES "button"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "button" ADD CONSTRAINT "FK_5b38fac084fb0ff638e95e7c5f5" FOREIGN KEY ("facilityFacilityId") REFERENCES "facility"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "position_configurations_positions" ADD CONSTRAINT "FK_20e9832d5eb9ee2f31c35496bcb" FOREIGN KEY ("positionConfigurationId") REFERENCES "position_configuration"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "position_configurations_positions" ADD CONSTRAINT "FK_34c3d74875229333877e600cd08" FOREIGN KEY ("positionId") REFERENCES "position"("id") ON DELETE CASCADE ON UPDATE NO ACTION`,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `ALTER TABLE "position_configurations_positions" DROP CONSTRAINT "FK_34c3d74875229333877e600cd08"`,
    );
    await queryRunner.query(
      `ALTER TABLE "position_configurations_positions" DROP CONSTRAINT "FK_20e9832d5eb9ee2f31c35496bcb"`,
    );
    await queryRunner.query(
      `ALTER TABLE "button" DROP CONSTRAINT "FK_5b38fac084fb0ff638e95e7c5f5"`,
    );
    await queryRunner.query(
      `ALTER TABLE "configuration-layout" DROP CONSTRAINT "FK_faee05098d1905d2069cfe79556"`,
    );
    await queryRunner.query(
      `ALTER TABLE "configuration-layout" DROP CONSTRAINT "FK_ac2cf043fdb7a824902fbbe8ecf"`,
    );
    await queryRunner.query(
      `ALTER TABLE "position" DROP CONSTRAINT "FK_237d67b997aed694f242f0522da"`,
    );
    await queryRunner.query(
      `ALTER TABLE "facility" DROP CONSTRAINT "FK_77a27f412476a918b5c83083187"`,
    );
    await queryRunner.query(
      `ALTER TABLE "editors" DROP CONSTRAINT "FK_3a9e132570f2ff4282f1e7f12f0"`,
    );
    await queryRunner.query(
      `DROP INDEX "public"."IDX_34c3d74875229333877e600cd0"`,
    );
    await queryRunner.query(
      `DROP INDEX "public"."IDX_20e9832d5eb9ee2f31c35496bc"`,
    );
    await queryRunner.query(`DROP TABLE "position_configurations_positions"`);
    await queryRunner.query(`DROP TABLE "button"`);
    await queryRunner.query(`DROP TYPE "public"."button_type_enum"`);
    await queryRunner.query(`DROP INDEX "public"."order_configuration-idx"`);
    await queryRunner.query(`DROP TABLE "configuration-layout"`);
    await queryRunner.query(`DROP TABLE "position_configuration"`);
    await queryRunner.query(`DROP INDEX "public"."position-name_facility-idx"`);
    await queryRunner.query(
      `DROP INDEX "public"."IDX_3ec9fb6cccc02b128261aea5ee"`,
    );
    await queryRunner.query(`DROP TABLE "position"`);
    await queryRunner.query(`DROP TYPE "public"."position_paneltype_enum"`);
    await queryRunner.query(`DROP TABLE "facility"`);
    await queryRunner.query(`DROP INDEX "public"."facility_editor-idx"`);
    await queryRunner.query(`DROP INDEX "public"."cid-idx"`);
    await queryRunner.query(`DROP TABLE "editors"`);
  }
}
